# v2020-11-20
# vim:foldmethod=marker

# Colors and Window Settings, courtesy of tmuxline.vim {{{
set -g status-justify "centre"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=#e2e2e3,bg=#414550"
set -g status-right-style "none"
set -g pane-active-border-style "fg=#a7df78"
set -g status-style "none,bg=#33353f"
set -g message-style "fg=#e2e2e3,bg=#414550"
set -g pane-border-style "fg=#414550"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "none,fg=#a7df78,bg=#33353f"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=#e2e2e3,bg=#33353f"
set -g status-left "#[fg=#2c2e34,bg=#a7df78] #S #[fg=#a7df78,bg=#414550,nobold,nounderscore,noitalics]#[fg=#e2e2e3,bg=#414550] #F #[fg=#414550,bg=#33353f,nobold,nounderscore,noitalics]#[fg=#e2e2e3,bg=#33353f] #W #[fg=#33353f,bg=#33353f,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#33353f,bg=#33353f,nobold,nounderscore,noitalics]#[fg=#e2e2e3,bg=#33353f] %a #[fg=#414550,bg=#33353f,nobold,nounderscore,noitalics]#[fg=#e2e2e3,bg=#414550] %b %d  %R #[fg=#a7df78,bg=#414550,nobold,nounderscore,noitalics]#[fg=#2c2e34,bg=#a7df78] #H "
setw -g window-status-format "#[fg=#33353f,bg=#33353f,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=#33353f,bg=#33353f,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=#33353f,bg=#414550,nobold,nounderscore,noitalics]#[fg=#e2e2e3,bg=#414550] #I  #W #[fg=#414550,bg=#33353f,nobold,nounderscore,noitalics]"

<% if [ "$YADM_HOSTNAME" = "pi-bastion" ] || [ "$YADM_HOSTNAME" = "hecu" ];then -%>
set -g pane-border-status top
<% else -%>
set-hook -g window-layout-changed 'if-shell -F "#{!=:#{window_panes},1}" "set-option -w pane-border-status top" ; if-shell -F "#{==:#{window_panes},1}" "set-option -w pane-border-status off"'
<% fi -%>

# Dim inactive panes, stolen from OneDark Tmux
set-option -gq "window-style" "fg=#575B61"
set-option -gq "window-active-style" "fg=#b6bdc8"
# }}}

# Mouse Mode {{{
set-option -g -q mouse on
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

set -g set-clipboard off
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"
# }}}

# Bell and activity {{{
set-window-option -g monitor-activity on
set-option -g bell-action current
set-option -g visual-activity on
set-option -g visual-bell off
# }}}

# Status Bar {{{
set-window-option -g automatic-rename on
set-option -g base-index 1
# }}}

# Misc tweaks {{{
set -g allow-passthrough
set-option -g display-time 1000
# set-option -g default-terminal "xterm-256color"
# set-option -g default-terminal "tmux-256color"
#set-option -ga terminal-overrides ",xterm-256color*:Tc"
#set-option -ga terminal-overrides ',*:enacs@:smacs@:rmacs@:acsc@'
# }}}

# Keybinds {{{
set-window-option -g mode-keys vi
unbind [
bind y copy-mode
unbind p
bind p paste-buffer

bind-key C-a send-prefix
unbind b
bind-key b break-pane
unbind j
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
unbind s
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -L 10
bind h resize-pane -R 10
bind-key ^Z resize-pane -Z
bind-key ^D detach-client
bind-key ^C new-window
bind-key n next-window
bind-key ^n next-window
bind-key N previous-window
bind-key ^N previous-window
bind R refresh-client
unbind r
bind r \
	source-file ~/.tmux.conf \;\
	display 'Reloaded tmux config.'
# }}}

# sensible-tmux {{{
#set-option -g utf8 on
#set-option -g status-utf8 on
set-option -s escape-time 0
set-option -g history-limit 50000
set-option -g display-time 750
#set-option -s default-trminal "screen-256color"
#set-option -sa terminal-overrides ',screen-256color:RGB'
set-option -g status-keys emacs
set-option -g focus-events on
set-window-option -g aggressive-resize on
bind-key C-p previous-window
bind-key C-n next-window
# }}}
